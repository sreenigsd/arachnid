<?xml version="1.0" encoding="UTF-8"?>
<project name="module_arachnid-core" default="compile.module.arachnid-core">
  <dirname property="module.arachnid-core.basedir" file="${ant.file.module_arachnid-core}"/>
  
  <property name="module.jdk.home.arachnid-core" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.arachnid-core" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.arachnid-core" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.arachnid-core" value="${compiler.args}"/>
  
  <property name="arachnid-core.output.dir" value="${module.arachnid-core.basedir}/target/classes"/>
  <property name="arachnid-core.testoutput.dir" value="${module.arachnid-core.basedir}/target/test-classes"/>
  
  <path id="arachnid-core.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="arachnid-core.module.production.classpath">
    <path refid="${module.jdk.classpath.arachnid-core}"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpclient:4.2.4.classpath"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpcore:4.2.4.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.1.classpath"/>
    <path refid="library.maven:_commons-codec:commons-codec:1.6.classpath"/>
    <path refid="library.maven:_com.google.guava:guava:13.0.1.classpath"/>
    <path refid="library.maven:_org.apache.commons:commons-lang3:3.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_commons-collections:commons-collections:3.2.1.classpath"/>
    <path refid="library.maven:_net.sourceforge.htmlcleaner:htmlcleaner:2.4.classpath"/>
    <path refid="library.maven:_org.jdom:jdom2:2.0.4.classpath"/>
    <path refid="library.maven:_commons-io:commons-io:1.3.2.classpath"/>
  </path>
  
  <path id="arachnid-core.runtime.production.module.classpath">
    <pathelement location="${arachnid-core.output.dir}"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpclient:4.2.4.classpath"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpcore:4.2.4.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.1.classpath"/>
    <path refid="library.maven:_commons-codec:commons-codec:1.6.classpath"/>
    <path refid="library.maven:_com.google.guava:guava:13.0.1.classpath"/>
    <path refid="library.maven:_org.apache.commons:commons-lang3:3.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_commons-collections:commons-collections:3.2.1.classpath"/>
    <path refid="library.maven:_net.sourceforge.htmlcleaner:htmlcleaner:2.4.classpath"/>
    <path refid="library.maven:_org.jdom:jdom2:2.0.4.classpath"/>
    <path refid="library.maven:_commons-io:commons-io:1.3.2.classpath"/>
  </path>
  
  <path id="arachnid-core.module.classpath">
    <path refid="${module.jdk.classpath.arachnid-core}"/>
    <pathelement location="${arachnid-core.output.dir}"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpclient:4.2.4.classpath"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpcore:4.2.4.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.1.classpath"/>
    <path refid="library.maven:_commons-codec:commons-codec:1.6.classpath"/>
    <path refid="library.maven:_junit:junit:4.7.classpath"/>
    <path refid="library.maven:_com.google.guava:guava:13.0.1.classpath"/>
    <path refid="library.maven:_org.apache.commons:commons-lang3:3.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_commons-collections:commons-collections:3.2.1.classpath"/>
    <path refid="library.maven:_net.sourceforge.htmlcleaner:htmlcleaner:2.4.classpath"/>
    <path refid="library.maven:_org.jdom:jdom2:2.0.4.classpath"/>
    <path refid="library.maven:_commons-io:commons-io:1.3.2.classpath"/>
  </path>
  
  <path id="arachnid-core.runtime.module.classpath">
    <pathelement location="${arachnid-core.testoutput.dir}"/>
    <pathelement location="${arachnid-core.output.dir}"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpclient:4.2.4.classpath"/>
    <path refid="library.maven:_org.apache.httpcomponents:httpcore:4.2.4.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.1.classpath"/>
    <path refid="library.maven:_commons-codec:commons-codec:1.6.classpath"/>
    <path refid="library.maven:_junit:junit:4.7.classpath"/>
    <path refid="library.maven:_com.google.guava:guava:13.0.1.classpath"/>
    <path refid="library.maven:_org.apache.commons:commons-lang3:3.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
    <path refid="library.maven:_commons-collections:commons-collections:3.2.1.classpath"/>
    <path refid="library.maven:_net.sourceforge.htmlcleaner:htmlcleaner:2.4.classpath"/>
    <path refid="library.maven:_org.jdom:jdom2:2.0.4.classpath"/>
    <path refid="library.maven:_commons-io:commons-io:1.3.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.arachnid-core">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.arachnid-core">
    <patternset refid="excluded.from.module.arachnid-core"/>
  </patternset>
  
  <path id="arachnid-core.module.sourcepath">
    <dirset dir="${module.arachnid-core.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="arachnid-core.module.test.sourcepath">
    <dirset dir="${module.arachnid-core.basedir}">
      <include name="src/test/java"/>
      <include name="src/test/resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.arachnid-core" depends="compile.module.arachnid-core.production,compile.module.arachnid-core.tests" description="Compile module arachnid-core"/>
  
  <target name="compile.module.arachnid-core.production" depends="register.custom.compilers" description="Compile module arachnid-core; production classes">
    <mkdir dir="${arachnid-core.output.dir}"/>
    <javac2 destdir="${arachnid-core.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.arachnid-core}/javac">
      <compilerarg line="${compiler.args.arachnid-core}"/>
      <bootclasspath refid="arachnid-core.module.bootclasspath"/>
      <classpath refid="arachnid-core.module.production.classpath"/>
      <src refid="arachnid-core.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.arachnid-core"/>
    </javac2>
    
    <copy todir="${arachnid-core.output.dir}">
      <fileset dir="${module.arachnid-core.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.arachnid-core.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.arachnid-core.tests" depends="register.custom.compilers,compile.module.arachnid-core.production" description="compile module arachnid-core; test classes" unless="skip.tests">
    <mkdir dir="${arachnid-core.testoutput.dir}"/>
    <javac2 destdir="${arachnid-core.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.arachnid-core}/javac">
      <compilerarg line="${compiler.args.arachnid-core}"/>
      <bootclasspath refid="arachnid-core.module.bootclasspath"/>
      <classpath refid="arachnid-core.module.classpath"/>
      <src refid="arachnid-core.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.arachnid-core"/>
    </javac2>
    
    <copy todir="${arachnid-core.testoutput.dir}">
      <fileset dir="${module.arachnid-core.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.arachnid-core.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.arachnid-core" description="cleanup module">
    <delete dir="${arachnid-core.output.dir}"/>
    <delete dir="${arachnid-core.testoutput.dir}"/>
  </target>
</project>